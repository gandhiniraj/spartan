/*
 * Swagger resourceProviderstore
 *
 * This is a sample server resourceProviderstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using IO.Swagger.Attributes;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class ResourceProviderApiController : Controller
    { 
        /// <summary>
        /// Update an existing rp
        /// </summary>
        /// <remarks></remarks>
        /// <param name="body">resourceProvider object that needs to be added to the store</param>
        /// <response code="400">Invalid ID supplied</response>
        /// <response code="404">resourceProvider not found</response>
        /// <response code="405">Validation exception</response>
        [HttpPut]
        [Route("/v2/resourceProvider")]
        [ValidateModelState]
        [SwaggerOperation("UpdateRP")]
        public virtual object UpdateRP([FromBody]ResourceProvider body)
        {
			string exampleJson = @"{  name: 'Intel',  swaggerSpecURI: 'foo'}";

			var example = exampleJson != null
			? JsonConvert.DeserializeObject<List<ResourceProvider>>(exampleJson)
			: default(List<ResourceProvider>);
			return new ObjectResult(example);
		}
    }
}
